project_name: pedestrian-deaths

root_dir: ../root

plugins_dir:
- ../.installed_plugins
- ../plugins

pipes:

# - connector: plugin:scdps
#   metric: collisions
#   location: sc
#   parameters:
#     columns:
#        accident_number: AccidentNumber
#        datetime: CrashDate
#        object_id: OBJECTID
#     indices:
#       county: County
#     schema: "SCDPS"

- connector: plugin:scdps
  metric: UNITS
  location: greenville
  parameters:
    schema: SCDPS
    target: UNITS
    columns:
      crash_number: crash_number
      unit_number: unit_number
    dtypes:
      crash_number: int
      unit_number: int
    indices:
      unit_type: unit_type

- connector: plugin:scdps
  metric: OCCUPANT
  location: greenville
  parameters:
    schema: SCDPS
    target: OCCUPANT
    columns:
      collision_number: collision_number
      unit_number: unit_number
    dtypes:
      collision_number: int
      unit_number: int

- connector: plugin:scdps
  metric: LOCATION
  location: greenville
  parameters:
    schema: SCDPS
    target: LOCATION
    columns:
      primary: crash_number
    dtypes:
      crash_number: int
      date: string
      number_of_units: int
      decimal_degrees_latitude: numeric
      decimal_degrees_longitude: numeric
      persons_killed: int
      persons_injured: int
    indices:
      collision_type: collision_type
      primary_contributing_factor: primary_contributing_factor

- connector: sql:bwg
  metric: crashes
  location: greenville
  parameters:
    schema: Ped
    target: crashes
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[point, 4326]
    indices:
      first_harmful_event: first_harmful_event
      primary_contributing_factor: primary_contributing_factor
    sql: |-
      SELECT
        (TO_TIMESTAMP(date || ' ' || time, 'MM/DD/YY HH24MI') AT TIME ZONE 'US/Eastern') AT TIME ZONE 'UTC' AS "timestamp",
        l.crash_number,
        l.collision_type,
        l.persons_killed::INT AS persons_killed,
        l.persons_injured::INT AS persons_injured,
        l.traffic_control_type,
        l.junction_type,
        l.lighting_conditions,
        l.weather_conditions,
        l.road_condition,
        l.first_harmful_event,
        l.primary_contributing_factor,
        CASE
          WHEN decimal_degrees_longitude = 0 THEN NULL
          ELSE ST_SETSRID(
            ST_MakePoint(l."decimal_degrees_longitude"::NUMERIC, l."decimal_degrees_latitude"::NUMERIC),
            4326
          )
        END AS "geometry"
      FROM "SCDPS"."LOCATION" AS l

- connector: "sql:bwg"
  metric: "crashes"
  location: "pedestrian"
  parameters:
    schema: Ped
    target: crashes_pedestrian
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'greenville') }}
      WHERE "first_harmful_event" = 'Pedestrian'
        OR "primary_contributing_factor" = 'Improper Crossing'

- connector: "sql:bwg"
  metric: "crashes"
  location: "pedalcycle"
  parameters:
    schema: Ped
    target: crashes_pedalcycle
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'greenville') }}
      WHERE first_harmful_event = 'Pedalcycle'

- connector: "sql:bwg"
  metric: "fatalities"
  location: "pedestrian"
  parameters:
    schema: Ped
    target: fatalities_pedestrian
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedestrian') }}
      WHERE persons_killed > 0

- connector: "sql:bwg"
  metric: "fatalities"
  location: "pedalcycle"
  parameters:
    schema: Ped
    target: fatalities_pedalcycle
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedalcycle') }}
      WHERE persons_killed > 0

- connector: "sql:bwg"
  metric: "injuries"
  location: "pedestrian"
  parameters:
    schema: Ped
    target: injuries_pedestrian
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedestrian') }}
      WHERE persons_injured > 0

- connector: "sql:bwg"
  metric: "injuries"
  location: "pedalcycle"
  parameters:
    schema: Ped
    target: injuries_pedalcycle
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedalcycle') }}
      WHERE persons_injured > 0

######## 2017 ##########

# - connector: sql:bwg
#   metric: collisions
#   location: greenville
#   parameters:
#     columns:
#       datetime: CrashDate
#       accident_number: AccidentNumber
#     dtypes:
#       geometry: geometry[POINT, 4326]
#     indices:
#       victim_type: VictimType
#     schema: SCDPS
#     sql: |-
#       WITH src AS (
#         SELECT
#           "CrashDate",
#           "AccidentNumber"::INT,
#           "TotalNumberOfOccupants"::INT,
#           "NumberOfUnits"::INT,
#           GREATEST("NumberOfUnits"::INT / GREATEST("TotalNumberOfOccupants"::INT, 1), 1) * 10 AS "NumberOfUnitsSizeScale",
#           "NumberOfInjuries"::INT,
#           GREATEST("NumberOfInjuries"::INT, 1) * 10 AS "NumberOfInjuriesSizeScale",
#           "NumberOfFatalities"::INT,
#           GREATEST("NumberOfFatalities"::INT, 1) * 10 AS "NumberOfFatalitiesSizeScale",
#           CASE
#             WHEN "FirstHarmfulEvent" = 'Pedestrian' THEN 'Pedestrian'
#             WHEN "MostHarmfulEvent" = 'Pedestrian' THEN 'Pedestrian'
#             WHEN "FirstHarmfulEvent" = 'Pedalcycle' THEN 'Pedalcycle'
#             WHEN "MostHarmfulEvent" = 'Pedalcycle' THEN 'Pedalcycle'
#           END AS "VictimType",
#           ST_SETSRID(
#             ST_MakePoint("Longitude"::NUMERIC, "Latitude"::NUMERIC),
#             4326
#           ) AS "geometry"
#         FROM {{Pipe('plugin:scdps', 'collisions', 'sc')}}
#         WHERE
#           "County" = 'Greenville'
#           AND (
#             "FirstHarmfulEvent" IN ('Pedestrian', 'Pedalcycle')
#             OR "MostHarmfulEvent" IN ('Pedestrian', 'Pedalcycle')
#           )
#           AND NOT ("FirstHarmfulEvent" = 'Pedestrian' AND "MostHarmfulEvent" = 'Pedalcycle')
#           AND "MostHarmfulEvent" != 'Spill (Two-Wheeled Vehicle)'
#         )
#         SELECT
#           "CrashDate",
#           "AccidentNumber",
#           "TotalNumberOfOccupants",
#           "NumberOfUnits",
#           "NumberOfUnitsSizeScale",
#           "NumberOfInjuries",
#           "NumberOfInjuriesSizeScale",
#           "NumberOfFatalities",
#           "NumberOfFatalitiesSizeScale",
#           "VictimType",
#           ST_Intersection(src."geometry", ST_Transform(b."geometry", 4326)) AS "geometry"
#         FROM src
#         INNER JOIN "Boundaries"."boundaries_greenville_county" AS b
#           ON ST_Intersects(ST_Transform(b."geometry", 4326), src."geometry")

# - connector: sql:bwg
#   metric: collisions
#   location: pedestrian
#   parameters:
#     columns:
#       datetime: "CrashDate"
#       accident_number: "AccidentNumber"
#     dtypes:
#       geometry: geometry[POINT, 4326]
#     schema: SCDPS
#     sql: |-
#       SELECT *
#       FROM {{Pipe('sql:bwg', 'collisions', 'greenville', instance='sql:bwg')}}
#       WHERE "VictimType" = 'Pedestrian'

# - connector: sql:bwg
#   metric: collisions
#   location: pedalcycle
#   parameters:
#     columns:
#       datetime: "CrashDate"
#       accident_number: "AccidentNumber"
#     dtypes:
#       geometry: geometry[POINT, 4326]
#     schema: SCDPS
#     sql: |-
#       SELECT *
#       FROM {{Pipe('sql:bwg', 'collisions', 'greenville', instance='sql:bwg')}}
#       WHERE "VictimType" = 'Pedalcycle'

# - connector: sql:bwg
#   metric: fatalities
#   location: pedestrian
#   parameters:
#     columns:
#       datetime: "CrashDate"
#       accident_number: "AccidentNumber"
#     dtypes:
#       geometry: geometry[POINT, 4326]
#     schema: SCDPS
#     sql: |-
#       SELECT *
#       FROM {{Pipe('sql:bwg', 'collisions', 'pedestrian', instance='sql:bwg')}}
#       WHERE "NumberOfFatalities" > 0

# - connector: sql:bwg
#   metric: fatalities
#   location: pedalcycle 
#   parameters:
#     columns:
#       datetime: "CrashDate"
#       accident_number: "AccidentNumber"
#     dtypes:
#       geometry: geometry[POINT, 4326]
#     schema: SCDPS
#     sql: |-
#       SELECT *
#       FROM {{Pipe('sql:bwg', 'collisions', 'pedalcycle', instance='sql:bwg')}}
#       WHERE "NumberOfFatalities" > 0

# - connector: sql:bwg
#   metric: injuries
#   location: pedestrian
#   parameters:
#     columns:
#       datetime: CrashDate
#       accident_number: AccidentNumber
#     dtypes:
#       geometry: geometry[POINT, 4326]
#     schema: SCDPS
#     sql: |-
#       SELECT *
#       FROM {{Pipe('sql:bwg', 'collisions', 'pedestrian', instance='sql:bwg')}}
#       WHERE "NumberOfFatalities" = 0
#         AND "NumberOfInjuries" > 0 

# - connector: sql:bwg
#   metric: injuries
#   location: pedalcycle 
#   parameters:
#     columns:
#       datetime: CrashDate
#       accident_number: AccidentNumber
#     dtypes:
#       geometry: geometry[POINT, 4326]
#     schema: SCDPS
#     sql: |-
#       SELECT *
#       FROM {{Pipe('sql:bwg', 'collisions', 'pedalcycle', instance='sql:bwg')}}
#       WHERE "NumberOfFatalities" = 0
#         AND "NumberOfInjuries" > 0 

# - connector: sql:bwg
#   metric: close_calls
#   location: pedestrian
#   parameters:
#     columns:
#       datetime: CrashDate
#       accident_number: AccidentNumber
#     dtypes:
#       geometry: geometry[POINT, 4326]
#     schema: SCDPS
#     sql: |-
#       SELECT *
#       FROM {{Pipe('sql:bwg', 'collisions', 'pedestrian', instance='sql:bwg')}}
#       WHERE "NumberOfFatalities" = 0
#         AND "NumberOfInjuries" = 0 

# - connector: sql:bwg
#   metric: close_calls
#   location: pedalcycle 
#   parameters:
#     columns:
#       datetime: CrashDate
#       accident_number: AccidentNumber
#     dtypes:
#       geometry: geometry[POINT, 4326]
#     schema: SCDPS
#     sql: |-
#       SELECT *
#       FROM {{Pipe('sql:bwg', 'collisions', 'pedalcycle', instance='sql:bwg')}}
#       WHERE "NumberOfFatalities" = 0
#         AND "NumberOfInjuries" = 0 

config:
  meerschaum:
    instance: sql:bwg
    connectors:
      sql:
        bwg: MRSM{meerschaum:connectors:sql:bwg}
  plugins:
    bwg:
      data_path: '{MRSM_ROOT_DIR}/../data'
