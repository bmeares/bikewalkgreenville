project_name: pedestrian-deaths

root_dir: ../root

plugins_dir:
- ../.installed_plugins
- ../plugins

plugins:
- "clone@api:mrsm"

pipes:

- connector: plugin:scdps
  metric: UNITS
  location: greenville
  parameters:
    schema: SCDPS
    target: UNITS
    columns:
      crash_number: crash_number
      unit_number: unit_number
    dtypes:
      crash_number: int
      unit_number: int
    indices:
      unit_type: unit_type

- connector: plugin:scdps
  metric: OCCUPANT
  location: greenville
  parameters:
    schema: SCDPS
    target: OCCUPANT
    columns:
      collision_number: collision_number
      unit_number: unit_number
    dtypes:
      collision_number: int
      unit_number: int

- connector: plugin:scdps
  metric: LOCATION
  location: greenville
  parameters:
    schema: SCDPS
    target: LOCATION
    columns:
      primary: crash_number
    dtypes:
      crash_number: int
      date: string
      number_of_units: int
      decimal_degrees_latitude: numeric
      decimal_degrees_longitude: numeric
      persons_killed: int
      persons_injured: int
    indices:
      collision_type: collision_type
      primary_contributing_factor: primary_contributing_factor

- connector: sql:bwg
  metric: crashes
  location: greenville
  parameters:
    schema: Ped
    target: crashes
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[point, 4326]
    indices:
      first_harmful_event: first_harmful_event
      primary_contributing_factor: primary_contributing_factor
    sql: |-
      SELECT
        (TO_TIMESTAMP(date || ' ' || time, 'MM/DD/YY HH24MI') AT TIME ZONE 'US/Eastern') AT TIME ZONE 'UTC' AS "timestamp",
        l.crash_number,
        l.collision_type,
        l.persons_killed::INT AS persons_killed,
        l.persons_injured::INT AS persons_injured,
        l.traffic_control_type,
        l.junction_type,
        l.lighting_conditions,
        l.weather_conditions,
        l.road_condition,
        l.first_harmful_event,
        l.primary_contributing_factor,
        CASE
          WHEN decimal_degrees_longitude = 0 THEN NULL
          ELSE ST_SETSRID(
            ST_MakePoint(l."decimal_degrees_longitude"::NUMERIC, l."decimal_degrees_latitude"::NUMERIC),
            4326
          )
        END AS "geometry"
      FROM "SCDPS"."LOCATION" AS l

- connector: "sql:bwg"
  metric: "units"
  location: "pedestrian"
  parameters:
    schema: "Ped"
    target: units_pedestrian
    columns:
      crash_number: crash_number
      unit_number: unit_number
    dtypes:
      crash_number: int
      unit_number: int
    sql: |-
      SELECT *
      FROM {{ Pipe('plugin:scdps', 'UNITS', 'greenville', instance='sql:bwg') }}
      WHERE unit_type = 'Pedestrian'

- connector: "sql:bwg"
  metric: "units"
  location: "pedalcycle"
  parameters:
    schema: "Ped"
    target: units_pedalcycle
    columns:
      crash_number: crash_number
      unit_number: unit_number
    dtypes:
      crash_number: int
      unit_number: int
    sql: |-
      SELECT *
      FROM {{ Pipe('plugin:scdps', 'UNITS', 'greenville', instance='sql:bwg') }}
      WHERE unit_type = 'Pedalcycle'

- connector: "sql:bwg"
  metric: "crash_numbers"
  location: "pedestrian"
  parameters:
    schema: "Ped"
    target: crash_numbers_pedestrian
    columns:
      primary: crash_number
    dtypes:
      crash_number: int
    sql: |-
      SELECT DISTINCT crash_number
      FROM {{ Pipe('sql:bwg', 'units', 'pedestrian', instance='sql:bwg') }}

- connector: "sql:bwg"
  metric: "crash_numbers"
  location: "pedalcycle"
  parameters:
    schema: "Ped"
    target: crash_numbers_pedalcycle
    columns:
      primary: crash_number
    dtypes:
      crash_number: int
    sql: |-
      SELECT DISTINCT crash_number
      FROM {{ Pipe('sql:bwg', 'units', 'pedalcycle', instance='sql:bwg') }}

- connector: "sql:bwg"
  metric: "crashes"
  location: "pedestrian"
  parameters:
    schema: Ped
    target: crashes_pedestrian
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT c.*
      FROM {{ Pipe('sql:bwg', 'crashes', 'greenville', instance='sql:bwg') }} AS c
      INNER JOIN {{ Pipe('sql:bwg', 'crash_numbers', 'pedestrian') }} AS cn
        ON c.crash_number = cn.crash_number

- connector: "sql:bwg"
  metric: "crashes"
  location: "pedalcycle"
  parameters:
    schema: Ped
    target: crashes_pedalcycle
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT c.*
      FROM {{ Pipe('sql:bwg', 'crashes', 'greenville', instance='sql:bwg') }} AS c
      INNER JOIN {{ Pipe('sql:bwg', 'crash_numbers', 'pedalcycle') }} AS cn
        ON c.crash_number = cn.crash_number

- connector: "sql:bwg"
  metric: "crashes"
  location: "vulnerable"
  parameters:
    schema: Ped
    target: crashes_vulnerable
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedestrian', instance='sql:bwg') }}
      UNION ALL
      SELECT cyclist.*
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedalcycle', instance='sql:bwg') }} AS cyclist
      LEFT JOIN {{ Pipe('sql:bwg', 'crashes', 'pedestrian', instance='sql:bwg') }} AS pedestrian
        ON cyclist.crash_number = pedestrian.crash_number
      WHERE pedestrian.crash_number IS NULL

- connector: "sql:bwg"
  metric: "crashes_occupant"
  location: "pedestrian"
  parameters:
    schema: "Ped"
    target: crashes_occupant_pedestrian
    columns:
      datetime: timestamp
      crash_number: crash_number
      unit_number: unit_number
    dtypes: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM "SCDPS"."OCCUPANT" AS o
      INNER JOIN "Ped".crashes_pedestrian AS c
        ON c.crash_number = o.collision_number
      WHERE o.seat_location = 'Pedestrian'

- connector: "sql:bwg"
  metric: "fatalities"
  location: "pedestrian"
  parameters:
    schema: Ped
    target: fatalities_pedestrian
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedestrian', instance='sql:bwg') }}
      WHERE persons_killed > 0

- connector: "sql:bwg"
  metric: "fatalities"
  location: "pedalcycle"
  parameters:
    schema: Ped
    target: fatalities_pedalcycle
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedalcycle', instance='sql:bwg') }}
      WHERE persons_killed > 0
 
- connector: "sql:bwg"
  metric: "fatalities"
  location: "vulnerable"
  parameters:
    schema: Ped
    target: fatalities_vulnerable
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'fatalities', 'pedestrian', instance='sql:bwg') }}
      UNION ALL
      SELECT cyclist.*
      FROM {{ Pipe('sql:bwg', 'fatalities', 'pedalcycle', instance='sql:bwg') }} AS cyclist
      LEFT JOIN {{ Pipe('sql:bwg', 'fatalities', 'pedestrian', instance='sql:bwg') }} AS pedestrian
        ON cyclist.crash_number = pedestrian.crash_number
      WHERE pedestrian.crash_number IS NULL
 
- connector: "sql:bwg"
  metric: "injuries"
  location: "pedestrian"
  parameters:
    schema: Ped
    target: injuries_pedestrian
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedestrian', instance='sql:bwg') }}
      WHERE persons_injured > 0

- connector: "sql:bwg"
  metric: "injuries"
  location: "pedalcycle"
  parameters:
    schema: Ped
    target: injuries_pedalcycle
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedalcycle', instance='sql:bwg') }}
      WHERE persons_injured > 0

- connector: "sql:bwg"
  metric: "injuries"
  location: "vulnerable"
  parameters:
    schema: Ped
    target: injuries_vulnerable
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'injuries', 'pedestrian', instance='sql:bwg') }}
      UNION ALL
      SELECT cyclist.*
      FROM {{ Pipe('sql:bwg', 'injuries', 'pedalcycle', instance='sql:bwg') }} AS cyclist
      LEFT JOIN {{ Pipe('sql:bwg', 'injuries', 'pedestrian', instance='sql:bwg') }} AS pedestrian
        ON cyclist.crash_number = pedestrian.crash_number
      WHERE pedestrian.crash_number IS NULL
 
- connector: "sql:bwg"
  metric: "noninjuries"
  location: "pedestrian"
  parameters:
    schema: Ped
    target: noninjuries_pedestrian
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedestrian', instance='sql:bwg') }}
      WHERE persons_injured = 0
        AND persons_killed = 0

- connector: "sql:bwg"
  metric: "noninjuries"
  location: "pedalcycle"
  parameters:
    schema: Ped
    target: noninjuries_pedalcycle
    columns:
      datetime: timestamp
      primary: crash_number
    dtype:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'crashes', 'pedalcycle', instance='sql:bwg') }}
      WHERE persons_injured = 0
        AND persons_killed = 0

- connector: "sql:bwg"
  metric: "noninjuries"
  location: "vulnerable"
  parameters:
    schema: Ped
    target: noninjuries_vulnerable
    columns:
      datetime: timestamp
      primary: crash_number
    dtypes:
      geometry: geometry[Point, 4326]
    sql: |-
      SELECT *
      FROM {{ Pipe('sql:bwg', 'noninjuries', 'pedestrian', instance='sql:bwg') }}
      UNION ALL
      SELECT cyclist.*
      FROM {{ Pipe('sql:bwg', 'noninjuries', 'pedalcycle', instance='sql:bwg') }} AS cyclist
      LEFT JOIN {{ Pipe('sql:bwg', 'noninjuries', 'pedestrian', instance='sql:bwg') }} AS pedestrian
        ON cyclist.crash_number = pedestrian.crash_number
      WHERE pedestrian.crash_number IS NULL

### Felt layers

- connector: "plugin:clone"
  metric: "fatalities"
  location: "pedestrian"
  instance: "sql:pedestrian"
  parameters:
    target: "{{ Pipe('sql:bwg', 'fatalities', 'pedestrian', instance='sql:bwg').target }}"
    columns: "{{ Pipe('sql:bwg', 'fatalities', 'pedestrian', instance='sql:bwg').columns }}"
    dtypes: "{{ Pipe('sql:bwg', 'fatalities', 'pedestrian', instance='sql:bwg').dtypes }}"
    source:
      pipe:
        connector: "sql:bwg"
        metric: "fatalities"
        location: "pedestrian"
      chunk_minutes: 5259600
      skip_pipe_keys: true

- connector: "plugin:clone"
  metric: "fatalities"
  location: "pedalcycle"
  instance: "sql:pedestrian"
  parameters:
    target: "{{ Pipe('sql:bwg', 'fatalities', 'pedalcycle', instance='sql:bwg').target }}"
    columns: "{{ Pipe('sql:bwg', 'fatalities', 'pedalcycle', instance='sql:bwg').columns }}"
    dtypes: "{{ Pipe('sql:bwg', 'fatalities', 'pedalcycle', instance='sql:bwg').dtypes }}"
    source:
      pipe:
        connector: "sql:bwg"
        metric: "fatalities"
        location: "pedalcycle"
      chunk_minutes: 5259600
      skip_pipe_keys: true

- connector: "plugin:clone"
  metric: "injuries"
  location: "pedestrian"
  instance: "sql:pedestrian"
  parameters:
    target: "{{ Pipe('sql:bwg', 'injuries', 'pedestrian', instance='sql:bwg').target }}"
    columns: "{{ Pipe('sql:bwg', 'injuries', 'pedestrian', instance='sql:bwg').columns }}"
    dtypes: "{{ Pipe('sql:bwg', 'injuries', 'pedestrian', instance='sql:bwg').dtypes }}"
    source:
      pipe:
        connector: "sql:bwg"
        metric: "injuries"
        location: "pedestrian"
      chunk_minutes: 5259600
      skip_pipe_keys: true

- connector: "plugin:clone"
  metric: "injuries"
  location: "pedalcycle"
  instance: "sql:pedestrian"
  parameters:
    target: "{{ Pipe('sql:bwg', 'injuries', 'pedalcycle', instance='sql:bwg').target }}"
    columns: "{{ Pipe('sql:bwg', 'injuries', 'pedalcycle', instance='sql:bwg').columns }}"
    dtypes: "{{ Pipe('sql:bwg', 'injuries', 'pedalcycle', instance='sql:bwg').dtypes }}"
    source:
      pipe:
        connector: "sql:bwg"
        metric: "injuries"
        location: "pedalcycle"
      chunk_minutes: 5259600
      skip_pipe_keys: true

config:
  meerschaum:
    instance: sql:bwg
    connectors:
      sql:
        bwg: MRSM{meerschaum:connectors:sql:bwg}
        felt:
          username: MRSM{meerschaum:connectors:sql:bwg:username}
          password: MRSM{meerschaum:connectors:sql:bwg:password}
          port: MRSM{meerschaum:connectors:sql:bwg:port}
          host: MRSM{meerschaum:connectors:sql:bwg:host}
          database: MRSM{meerschaum:connectors:sql:bwg:database}
          flavor: MRSM{meerschaum:connectors:sql:bwg:flavor}
          schema: felt
        pedestrian:
          flavor: sqlite
          database: '{MRSM_ROOT_DIR}/../output/pedestrian.sqlite'
      felt:
        pedestrian:
          token: $FELT_API_TOKEN
          map_id: m9B2snG3gTnSryijc3IW9AVC
          project_id: 6W9B2V3v9ARKSQ9AV9BH2gLOhA
          instance_keys: sql:felt
  plugins:
    bwg:
      data_path: '{MRSM_ROOT_DIR}/../data'
